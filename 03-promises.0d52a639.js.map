{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAOZ,IAAMK,EAAMJ,SAASC,cAAc,UA+BnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCV,QAAQC,IAAI,uBAAwCU,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAExDL,QAAMC,IAAI,sBAAqCU,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IApC7DL,QAAQC,IAAIC,GAIZL,EAAKe,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAKN,IAJA,IAAMC,EAAaC,OAAOnB,EAAKQ,MAAMY,OAC/BC,EAAYF,OAAOnB,EAAKsB,KAAKF,OAC7BG,EAASJ,OAAOnB,EAAKuB,OAAOH,OAEzBI,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAKlClB,EAJekB,EAAI,EACPN,EAAaG,EAAYG,GAIlCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBL,QAAQC,IAAI,uBAAwCU,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAE3DmB,OAAM,SAAAD,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBL,QAAQC,IAAI,sBAAuCU,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAI/DQ,EAAMY,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconsole.log(form);\n// const firstDelay = document.querySelector('input[name=\"delay\"]');\n// console.dir(firstDelay.value);\n// const delayStep = document.querySelector('input[name=\"step\"]');\n// console.log(delayStep);\n// const amount = document.querySelector('input[name=\"amount\"]');\n// console.log(amount);\nconst btn = document.querySelector('button');\nconsole.log(btn);\n\n\n\nform.addEventListener('submit', onclick);\n\nfunction onclick(event) {\n  event.preventDefault();\n  const firstDelay = Number(form.delay.value);\n  const delayStep = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delay = firstDelay + delayStep * i;\n\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n  }\n  event.currentTarget.reset();\n\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","console","log","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","concat","addEventListener","event","preventDefault","firstDelay","Number","value","delayStep","step","amount","i","then","param","catch","currentTarget","reset"],"version":3,"file":"03-promises.0d52a639.js.map"}